'use strict';

const gulp = require('gulp'),
	concat = require('gulp-concat'),
	scss = require('gulp-sass'),
	uglify = require('gulp-uglify'),
	plumber = require('gulp-plumber'),
	ngAnnotate = require('gulp-ng-annotate'),
	sftp = require('gulp-sftp'),
	ngmin = require('gulp-ngmin'),
	autoprefixer = require('gulp-autoprefixer'),
	minify = require('gulp-clean-css');

gulp.task('libsjs', function(){
	gulp.src([

			'node_modules/angular/angular.js',
			'node_modules/angular-ui-router/release/angular-ui-router.js',
			'node_modules/angular-animate/angular-animate.js',
			'node_modules/angular-touch/angular-touch.js',
			'node_modules/angular-ui-notification/dist/angular-ui-notification.js',
			'node_modules/angular-translate/dist/angular-translate.min.js',
			'node_modules/angular-ui-bootstrap/dist/ui-bootstrap.js',
		    'node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js',
			'node_modules/chart.js/dist/Chart.js',
			'node_modules/angular-chart.js/dist/angular-chart.js',
			

		])
	.pipe(concat('libs.js'))
	.pipe(gulp.dest('builds/dev'));
});

gulp.task('libsjsp', function(){
	gulp.src([
		'node_modules/angular/angular.min.js',
		'node_modules/angular-ui-router/release/angular-ui-router.min.js',
		'node_modules/angular-animate/angular-animate.min.js',
		'node_modules/angular-touch/angular-touch.min.js',
		'node_modules/angular-ui-notification/dist/angular-ui-notification.min.js',
		'node_modules/angular-translate/dist/angular-translate.min.js',
		'node_modules/angular-ui-bootstrap/dist/ui-bootstrap.js',
		'node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js',
		'node_modules/chart.js/dist/Chart.min.js',
		'node_modules/angular-chart.js/dist/angular-chart.min.js',

		])
	.pipe(concat('libs.js'))
	.pipe(gulp.dest('builds/prod'));
});


gulp.task('js', function(){
	gulp.src([
			'builds/dev/app/**/*.js',
		])
		.pipe(plumber())
		.pipe(concat('app.js'))
		.pipe(ngAnnotate())
		.pipe(gulp.dest('builds/dev'));
});

gulp.task('jsprod', function(){
	gulp.src([
			'builds/dev/app/**/*.js',
		])
		.pipe(plumber())
		.pipe(concat('app.js'))
		.pipe(ngAnnotate())
		//.pipe(ngmin())
		.pipe(uglify())
		.pipe(gulp.dest('builds/prod'));
});

gulp.task('libscss', function(){
	gulp.src([
		'node_modules/bootstrap/dist/css/bootstrap.css',
		'node_modules/angular/angular-csp.css',
		'node_modules/angular-ui-bootstrap/dist/ui-bootstrap-csp.css',
		'node_modules/angular-ui-notification/dist/angular-ui-notification.css'
		])
		.pipe(scss())
		.pipe(concat('libs.css'))
		.pipe(gulp.dest('builds/dev'));
});

gulp.task('libscssp', function(){
	gulp.src([
		'node_modules/bootstrap/dist/css/bootstrap.min.css',
		'node_modules/angular/angular-csp.css',
		'node_modules/angular-ui-bootstrap/dist/ui-bootstrap-csp.css',
		'node_modules/angular-ui-notification/dist/angular-ui-notification.min.css'
		])
		.pipe(scss())
		.pipe(concat('libs.css'))
		.pipe(gulp.dest('builds/prod'));
});

gulp.task('scss', function(){
	gulp.src([
			'builds/dev/app/**/*.scss',
		])
		.pipe(plumber())
		.pipe(scss())
		.pipe(autoprefixer({
            browsers: ['last 2 versions'],
            cascade: false
        }))
		.pipe(concat('app.css'))
		.pipe(gulp.dest('builds/dev'));
});

gulp.task('scssprod', function(){
	gulp.src([
			'builds/dev/app/**/*.scss',
		])
		.pipe(plumber())
		.pipe(scss())
		.pipe(autoprefixer({
            browsers: ['last 3 versions'],
            cascade: false
        }))
        .pipe(minify())
		.pipe(concat('app.css'))
		.pipe(gulp.dest('builds/prod'));
});


gulp.task('watch', function(){
	gulp.watch('builds/dev/app/**/*.js', ['js']);
	gulp.watch('builds/dev/app/**/*.scss', ['scss']);
})


gulp.task('webserver', function(){
	gulp.src('builds/dev').pipe(webserver({
		livereload: true, open: true
	}));
});



gulp.task('move', function(){
	gulp.src(['builds/dev/*.html','builds/dev/**/*.html',
		'builds/dev/images*/*',
		'builds/dev/fonts*/*',
		'builds/dev/*.json'])
	.pipe(gulp.dest('builds/prod'));
});

gulp.task('uploadprod', function(){
	gulp.src(['builds/prod/**/*','builds/prod/*'])
	.pipe(sftp({
		host: '192.168.0.163',
		user: 'root',
		pass: 'root',
		remotePath: '/home/infotrans/web_ui'
	}))
});

gulp.task('upload', function(){
	gulp.src(['builds/dev/**/*','builds/dev/*'])
	.pipe(sftp({
		host: '192.168.0.163',
		user: 'root',
		pass: 'root',
		remotePath: '/home/infotrans/web_ui'
	}))
});

gulp.task('default', ['dev']);
gulp.task('prod', ['libsjsp','libscssp','jsprod','scssprod','move']);
gulp.task('dev', ['libsjs','libscss','js','scss']);
gulp.task('up', ['upload']);